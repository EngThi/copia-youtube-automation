{
  "name": "Dark Content Creator Workflow - HTTP Direct",
  "nodes": [
    {
      "parameters": {
        "mode": "everyMinute",
        "options": {}
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "id": "cec9b3c4-8d9e-4f5a-b1c2-d3e4f5a6b7c8",
      "position": [240, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key={{ $credentials.googleAiApi.apiKey }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "contents",
              "value": [
                {
                  "parts": [
                    {
                      "text": "Você é um analista de tendências. Gere 3 temas atuais com alto potencial de viralização para vídeos de nicho \"Dark/Faceless\" no YouTube e TikTok.\n\nPara cada tema, inclua no JSON de saída:\n1. \"theme_id\" (ID único para o tema)\n2. \"main_keyword\" (Palavra-chave principal)\n3. \"differentiating_subtheme\" (Subtema que o diferencia)\n4. \"emotion_predominant\" (Emoção predominante - ex: medo, mistério, curiosidade)\n5. \"engagement_potential\" (Potencial de engajamento - Alto, Médio, Baixo)\n6. \"suggested_title\" (Título que poderia ser usado)\n\n**Sempre responda apenas com o JSON, sem texto adicional antes ou depois.**"
                    }
                  ]
                }
              ]
            },
            {
              "name": "generationConfig",
              "value": {
                "temperature": 0.7,
                "maxOutputTokens": 1000
              }
            }
          ]
        }
      },
      "name": "Agente Trends",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
      "position": [440, 200]
    },
    {
      "parameters": {
        "jsCode": "// Extrair o texto da resposta do Gemini\nconst response = $json.candidates[0].content.parts[0].text;\ntry {\n  const parsedResponse = JSON.parse(response);\n  return { json: parsedResponse };\n} catch (error) {\n  return { json: { error: 'Failed to parse Gemini response', rawResponse: response } };\n}"
      },
      "name": "Parse Gemini Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "id": "parse1",
      "position": [640, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key={{ $credentials.googleAiApi.apiKey }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "contents",
              "value": [
                {
                  "parts": [
                    {
                      "text": "Com base nas tendências que recebo, gere um conceito de vídeo completo para um canal dark/faceless.\n\nDados de entrada: {{ JSON.stringify($json) }}\n\nCrie um enredo sombrio, tom narrativo e plot twists em formato JSON."
                    }
                  ]
                }
              ]
            },
            {
              "name": "generationConfig",
              "value": {
                "temperature": 0.7,
                "maxOutputTokens": 1000
              }
            }
          ]
        }
      },
      "name": "Oráculo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "id": "c3d4e5f6-g7h8-9012-cdef-345678901234",
      "position": [840, 200]
    },
    {
      "parameters": {
        "jsCode": "// Extrair o texto da resposta do Gemini\nconst response = $json.candidates[0].content.parts[0].text;\ntry {\n  const parsedResponse = JSON.parse(response);\n  return { json: parsedResponse };\n} catch (error) {\n  return { json: { error: 'Failed to parse Gemini response', rawResponse: response } };\n}"
      },
      "name": "Parse Oráculo Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "id": "parse2",
      "position": [1040, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key={{ $credentials.googleAiApi.apiKey }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "contents",
              "value": [
                {
                  "parts": [
                    {
                      "text": "Crie um roteiro completo de vídeo baseado no conceito:\n\n{{ JSON.stringify($json) }}\n\nGere um roteiro estruturado com introdução, desenvolvimento, clímax e conclusão em formato JSON."
                    }
                  ]
                }
              ]
            },
            {
              "name": "generationConfig",
              "value": {
                "temperature": 0.7,
                "maxOutputTokens": 1500
              }
            }
          ]
        }
      },
      "name": "Roteirista",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "id": "f6g7h8i9-j0k1-2345-fghi-678901234567",
      "position": [1240, 200]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Agente Trends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agente Trends": {
      "main": [
        [
          {
            "node": "Parse Gemini Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Gemini Response": {
      "main": [
        [
          {
            "node": "Oráculo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Oráculo": {
      "main": [
        [
          {
            "node": "Parse Oráculo Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Oráculo Response": {
      "main": [
        [
          {
            "node": "Roteirista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
