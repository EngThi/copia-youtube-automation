#!/bin/bash

# Backup Autom√°tico para Google Drive
# Script integrado que faz tudo: captura ambiente + upload para Drive

echo "‚òÅÔ∏è SISTEMA DE BACKUP AUTOM√ÅTICO PARA GOOGLE DRIVE"
echo "=================================================="

# Fun√ß√£o para logging
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Verificar se as depend√™ncias est√£o instaladas
check_dependencies() {
    log "Verificando depend√™ncias..."
    
    # Verificar Python
    if ! command -v python3 &> /dev/null; then
        log "‚ùå Python3 n√£o encontrado!"
        return 1
    fi
    
    # Verificar bibliotecas Google
    python3 -c "import googleapiclient, google.auth, google_auth_oauthlib" 2>/dev/null
    if [ $? -ne 0 ]; then
        log "üì¶ Instalando bibliotecas Google Drive..."
        pip3 install --user google-api-python-client google-auth-httplib2 google-auth-oauthlib
    fi
    
    log "‚úÖ Depend√™ncias verificadas"
    return 0
}

# Verificar credenciais
check_credentials() {
    log "Verificando credenciais..."
    
    if [ ! -f "google-drive-credentials.json" ]; then
        log "‚ùå Arquivo de credenciais n√£o encontrado!"
        log "üìã Criando template..."
        
        cat > google-drive-credentials.json << 'EOF'
{
  "installed": {
    "client_id": "SEU_CLIENT_ID_AQUI.apps.googleusercontent.com",
    "project_id": "seu-projeto-id",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_secret": "SEU_CLIENT_SECRET_AQUI",
    "redirect_uris": ["urn:ietf:wg:oauth:2.0:oob", "http://localhost"]
  }
}
EOF
        
        log "üìã Template criado: google-drive-credentials.json"
        log "üîß Configure suas credenciais e execute novamente"
        
        echo ""
        echo "CONFIGURE O GOOGLE DRIVE:"
        echo "========================"
        echo "1. Acesse: https://console.cloud.google.com/"
        echo "2. Crie projeto e ative Google Drive API"
        echo "3. Crie credenciais OAuth 2.0 Desktop"
        echo "4. Baixe o JSON e substitua google-drive-credentials.json"
        echo "5. Execute novamente: $0"
        
        return 1
    fi
    
    # Verificar se n√£o √© template
    if grep -q "SEU_CLIENT_ID_AQUI" google-drive-credentials.json; then
        log "‚ùå Credenciais n√£o configuradas (ainda √© template)"
        log "üîß Edite google-drive-credentials.json com suas credenciais reais"
        return 1
    fi
    
    log "‚úÖ Credenciais encontradas"
    return 0
}

# Capturar ambiente
capture_environment() {
    log "1Ô∏è‚É£ Capturando ambiente..."
    
    if [ -f "./capture-environment.sh" ]; then
        chmod +x ./capture-environment.sh
        ./capture-environment.sh
        log "‚úÖ Ambiente capturado"
    else
        log "‚ùå Script capture-environment.sh n√£o encontrado"
        return 1
    fi
}

# Executar upload
execute_upload() {
    log "2Ô∏è‚É£ Executando upload para Google Drive..."
    
    if [ -f "google-drive-uploader.py" ]; then
        python3 -c "
import sys
sys.path.append('.')
from google_drive_uploader import GoogleDriveUploader
uploader = GoogleDriveUploader()
uploader.full_backup_and_upload()
" 2>/dev/null
        
        if [ $? -eq 0 ]; then
            log "‚úÖ Upload conclu√≠do com sucesso!"
        else
            log "‚ö†Ô∏è Houve problemas no upload, tentando modo interativo..."
            python3 google-drive-uploader.py
        fi
    else
        log "‚ùå Script google-drive-uploader.py n√£o encontrado"
        return 1
    fi
}

# Menu interativo
interactive_menu() {
    while true; do
        echo ""
        echo "üìã MENU DE BACKUP GOOGLE DRIVE"
        echo "==============================="
        echo "1. Configurar credenciais"
        echo "2. Fazer backup completo"
        echo "3. Verificar status"
        echo "4. Upload manual"
        echo "5. Ver instru√ß√µes"
        echo "6. Sair"
        echo ""
        
        read -p "Escolha uma op√ß√£o: " choice
        
        case $choice in
            1)
                echo "üîß Abrindo arquivo de credenciais..."
                if command -v code &> /dev/null; then
                    code google-drive-credentials.json
                elif command -v nano &> /dev/null; then
                    nano google-drive-credentials.json
                else
                    echo "üìù Edite o arquivo: google-drive-credentials.json"
                fi
                ;;
            2)
                log "üöÄ Iniciando backup completo..."
                if check_dependencies && check_credentials; then
                    capture_environment && execute_upload
                else
                    log "‚ùå Verifique as depend√™ncias e credenciais"
                fi
                ;;
            3)
                echo "üìä STATUS DO SISTEMA:"
                echo "===================="
                check_dependencies
                check_credentials
                
                if [ -f ".codespace-config/system-info.txt" ]; then
                    echo "‚úÖ √öltimo backup: $(stat -c %y .codespace-config/system-info.txt)"
                else
                    echo "‚ùå Nenhum backup local encontrado"
                fi
                ;;
            4)
                if [ -f "google-drive-uploader.py" ]; then
                    python3 google-drive-uploader.py
                else
                    log "‚ùå Uploader n√£o encontrado"
                fi
                ;;
            5)
                if [ -f "google-drive-setup-instructions.md" ]; then
                    if command -v code &> /dev/null; then
                        code google-drive-setup-instructions.md
                    else
                        cat google-drive-setup-instructions.md
                    fi
                else
                    log "‚ùå Instru√ß√µes n√£o encontradas"
                fi
                ;;
            6)
                log "üëã Saindo..."
                exit 0
                ;;
            *)
                echo "‚ùå Op√ß√£o inv√°lida"
                ;;
        esac
        
        echo ""
        read -p "Pressione Enter para continuar..."
    done
}

# Fun√ß√£o principal
main() {
    # Se n√£o h√° argumentos, mostrar menu
    if [ $# -eq 0 ]; then
        interactive_menu
        return
    fi
    
    # Processar argumentos
    case $1 in
        "auto"|"backup")
            log "üöÄ Modo autom√°tico ativado"
            if check_dependencies && check_credentials; then
                capture_environment && execute_upload
            else
                log "‚ùå Configure o sistema primeiro"
                exit 1
            fi
            ;;
        "setup")
            ./setup-google-drive.sh
            ;;
        "check")
            check_dependencies
            check_credentials
            ;;
        *)
            echo "Uso: $0 [auto|backup|setup|check]"
            echo "Ou execute sem argumentos para menu interativo"
            ;;
    esac
}

# Executar fun√ß√£o principal
main "$@"
